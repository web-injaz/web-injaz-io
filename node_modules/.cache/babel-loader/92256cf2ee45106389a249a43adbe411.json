{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\src\\\\containers\\\\ShaperForm.js\",\n    _this = this;\n\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from '../utilities/validate';\nimport { connect } from 'react-redux';\nimport { getShapesList as _getShapesList } from '../actions/shapesAction';\n\nvar renderInput = function renderInput(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: input.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, label), React.createElement(\"input\", Object.assign({}, input, {\n    className: \"form-control\",\n    type: type,\n    placeholder: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, error));\n};\n\nvar renderSelect = function renderSelect(_ref2) {\n  var input = _ref2.input,\n      label = _ref2.label,\n      type = _ref2.type,\n      _ref2$meta = _ref2.meta,\n      touched = _ref2$meta.touched,\n      error = _ref2$meta.error;\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: input.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, label), React.createElement(\"select\", Object.assign({}, input, {\n    className: \"form-control\",\n    placeholder: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), _this.props.shapesList && _this.props.shapesList.map(function (option) {\n    return React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, option.name);\n  })), touched && error && React.createElement(\"span\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, error));\n}; // const renderTextarea = ({input, label, meta: { touched, error }}) => {\n//     return (\n//         <div className=\"form-group\">\n//             <label htmlFor={input.name}>{label}</label>\n//             <textarea {...input} className=\"form-control\" placeholder={label} />\n//             { touched && error && <span className=\"help-block\">{error}</span>}\n//         </div>\n//     )\n// }\n// const renderCheck = ({input, label, type, meta: { touched, error }}) => {    \n//     return (\n//         <div className={`custom-control custom-${type}`}>\n//             <input className=\"custom-control-input\" {...input} type={type} placeholder={label} />\n//             <label className=\"custom-control-label\" htmlFor={input.name}>{label}</label>\n//             { touched && error && <span className=\"help-block\">{error}</span>}\n//         </div>\n//     )\n// }\n\n\nvar ShaperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShaperForm, _Component);\n\n  function ShaperForm() {\n    _classCallCheck(this, ShaperForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShaperForm).apply(this, arguments));\n  }\n\n  _createClass(ShaperForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getShapesList([]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n      return React.createElement(\"div\", {\n        className: \"shaper-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Build a shape\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"shape_name\",\n        type: \"text\",\n        component: renderInput,\n        label: \"Shape name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"component_name\",\n        type: \"text\",\n        component: renderSelect,\n        label: \"Component name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Add your style\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"codepen\",\n        component: renderInput,\n        label: \"Your Codepen Pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: pristine || submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Clear Values\"))));\n    }\n  }]);\n\n  return ShaperForm;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getShapesList: function getShapesList(shapes) {\n      return dispatch(_getShapesList(shapes));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    form: state.form.shaperForm,\n    shapesList: state.shapes.shapesList\n  };\n};\n\nexport default reduxForm({\n  form: 'shaperForm',\n  validate: validate\n})(connect(mapStateToProps, mapDispatchToProps)(ShaperForm));","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\containers\\ShaperForm.js"],"names":["React","Component","Field","reduxForm","validate","connect","getShapesList","renderInput","input","label","type","meta","touched","error","name","renderSelect","props","shapesList","map","option","ShaperForm","handleSubmit","pristine","reset","submitting","mapDispatchToProps","dispatch","shapes","mapStateToProps","state","console","log","form","shaperForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport validate from '../utilities/validate';\r\nimport { connect } from 'react-redux';\r\nimport { getShapesList } from '../actions/shapesAction';\r\n\r\nconst renderInput = ({input, label, type, meta: { touched, error }}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={input.name}>{label}</label>\r\n            <input {...input} className=\"form-control\" type={type} placeholder={label} />\r\n            { touched && error && <span className=\"help-block\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst renderSelect = ({input, label, type, meta: { touched, error }}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={input.name}>{label}</label>\r\n            <select {...input} className=\"form-control\" placeholder={label} >\r\n                {this.props.shapesList && this.props.shapesList.map(option => <option>{option.name}</option>)}\r\n            </select>\r\n            { touched && error && <span className=\"help-block\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// const renderTextarea = ({input, label, meta: { touched, error }}) => {\r\n//     return (\r\n//         <div className=\"form-group\">\r\n//             <label htmlFor={input.name}>{label}</label>\r\n//             <textarea {...input} className=\"form-control\" placeholder={label} />\r\n//             { touched && error && <span className=\"help-block\">{error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// const renderCheck = ({input, label, type, meta: { touched, error }}) => {    \r\n//     return (\r\n//         <div className={`custom-control custom-${type}`}>\r\n//             <input className=\"custom-control-input\" {...input} type={type} placeholder={label} />\r\n//             <label className=\"custom-control-label\" htmlFor={input.name}>{label}</label>\r\n//             { touched && error && <span className=\"help-block\">{error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nclass ShaperForm extends Component\r\n{\r\n\r\n    componentDidMount() {\r\n        this.props.getShapesList([]);\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n\r\n        return (\r\n            <div className=\"shaper-form\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-section\">\r\n                        <h4>Build a shape</h4>\r\n                        <div className=\"mini-section\">\r\n                            <Field\r\n                                name=\"shape_name\"\r\n                                type=\"text\"\r\n                                component={renderInput}\r\n                                label=\"Shape name\"\r\n                            />\r\n                            <Field\r\n                                name=\"component_name\"\r\n                                type=\"text\"\r\n                                component={renderSelect}\r\n                                label=\"Component name\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <h4>Add your style</h4>\r\n                        <div className=\"mini-section\">\r\n                            <Field\r\n                                name=\"codepen\"\r\n                                component={renderInput}\r\n                                label=\"Your Codepen Pen\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\" disabled={pristine || submitting}>\r\n                        Submit\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\" disabled={pristine || submitting} onClick={reset}>\r\n                        Clear Values\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getShapesList: (shapes) => dispatch(getShapesList(shapes))\r\n})\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    \r\n    return {\r\n        form: state.form.shaperForm,\r\n        shapesList: state.shapes.shapesList\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'shaperForm',\r\n    validate\r\n})(connect(mapStateToProps, mapDispatchToProps)(ShaperForm));"]},"metadata":{},"sourceType":"module"}