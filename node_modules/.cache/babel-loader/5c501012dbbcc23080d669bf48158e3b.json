{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\src\\\\containers\\\\StylerForm.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from '../utilities/validate';\nimport { connect } from 'react-redux';\n\nvar renderInput = function renderInput(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: input.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, label), React.createElement(\"input\", Object.assign({}, input, {\n    className: \"form-control\",\n    type: type,\n    placeholder: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, error));\n};\n\nvar renderCheck = function renderCheck(_ref2) {\n  var input = _ref2.input,\n      label = _ref2.label,\n      type = _ref2.type,\n      _ref2$meta = _ref2.meta,\n      touched = _ref2$meta.touched,\n      error = _ref2$meta.error;\n  return React.createElement(\"div\", {\n    className: \"custom-control custom-\".concat(type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    className: \"custom-control-input\"\n  }, input, {\n    type: type,\n    placeholder: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: input.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, label), touched && error && React.createElement(\"span\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, error));\n};\n\nvar StylerForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StylerForm, _Component);\n\n  function StylerForm(props) {\n    var _this;\n\n    _classCallCheck(this, StylerForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StylerForm).call(this, props));\n\n    _this.toggleBgMore = function () {\n      _this.setState(function (state) {\n        return {\n          showMore: !state.showMore\n        };\n      });\n    };\n\n    _this.state = {\n      showMore: false\n    };\n    return _this;\n  }\n\n  _createClass(StylerForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Add main colors\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"primary\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Primary Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"secondary\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Secondary Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Create background\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"name\",\n        type: \"text\",\n        component: renderInput,\n        label: \"Background Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"background\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Background Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btn btn-primary show-more-btn\",\n        onClick: function onClick() {\n          return _this2.toggleBgMore();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"More options\"), React.createElement(\"div\", {\n        className: \"show-more mini-section \".concat(this.state.showMore ? '' : 'hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"light_inverse\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Light Inverse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"dark_inverse\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Dark Inverse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"text\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Background Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"headers\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Headers Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"links\",\n        type: \"color\",\n        component: renderInput,\n        label: \"Links Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Control variables\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"enable_default_root\",\n        type: \"checkbox\",\n        component: renderCheck,\n        label: \"Enable default root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"enable_inverse\",\n        type: \"checkbox\",\n        component: renderCheck,\n        label: \"Enable inverse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"enable_contrast\",\n        type: \"checkbox\",\n        component: renderCheck,\n        label: \"Enable contrast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"enable_trans\",\n        type: \"checkbox\",\n        component: renderCheck,\n        label: \"Enable trans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"enable_gray\",\n        type: \"checkbox\",\n        component: renderCheck,\n        label: \"Enable gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"enable_darken\",\n        type: \"checkbox\",\n        component: renderCheck,\n        label: \"Enable darken\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"enable_lighten\",\n        type: \"checkbox\",\n        component: renderCheck,\n        label: \"Enable lighten\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Import components\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"components\",\n        value: \"all\",\n        type: \"radio\",\n        component: renderCheck,\n        label: \"All components\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"components\",\n        defaultChecked: true,\n        value: \"specific\",\n        type: \"radio\",\n        component: renderCheck,\n        label: \"Choose components\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"other-components \".concat(this.props.form && this.props.form.values && this.props.form.values.components !== 'specific' ? 'hidden' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.props.shapesList && this.props.shapesList.map(function (comp) {\n        return React.createElement(Field, {\n          name: comp.name,\n          key: comp.name,\n          type: \"checkbox\",\n          component: renderCheck,\n          label: comp.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n      })))), React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Import shapes\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"shapes\",\n        value: \"all\",\n        type: \"radio\",\n        component: renderCheck,\n        label: \"All shapes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"shapes\",\n        defaultChecked: true,\n        value: \"specific\",\n        type: \"radio\",\n        component: renderCheck,\n        label: \"Choose shapes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"other-components \".concat(this.props.form && this.props.form.values && this.props.form.values.shapes !== 'specific' ? 'hidden' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, this.props.shapesList && this.props.shapesList.map(function (comp) {\n        return comp.shapes && comp.shapes.map(function (shape) {\n          return React.createElement(Field, {\n            name: shape.shape,\n            key: shape.shape,\n            type: \"checkbox\",\n            component: renderCheck,\n            label: \"\".concat(comp.name, \" - \").concat(shape.shape),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          });\n        });\n      })))), React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Clear Values\")));\n    }\n  }]);\n\n  return StylerForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    form: state.form.stylerForm,\n    shapesList: state.shapes.shapesList\n  };\n};\n\nexport default reduxForm({\n  form: 'stylerForm',\n  validate: validate,\n  initialValues: {\n    primary: '#a3dbfa',\n    secondary: '#bf99ea',\n    name: 'dark',\n    background: '#343a40',\n    enable_default_root: true,\n    enable_inverse: true,\n    enable_contrast: true,\n    enable_trans: true,\n    enable_gray: true,\n    enable_darken: false,\n    enable_lighten: false\n  }\n})(connect(mapStateToProps)(StylerForm));","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\containers\\StylerForm.js"],"names":["React","Component","Field","reduxForm","validate","connect","renderInput","input","label","type","meta","touched","error","name","renderCheck","StylerForm","props","toggleBgMore","setState","state","showMore","handleSubmit","pristine","reset","submitting","form","values","components","shapesList","map","comp","shapes","shape","mapStateToProps","stylerForm","initialValues","primary","secondary","background","enable_default_root","enable_inverse","enable_contrast","enable_trans","enable_gray","enable_darken","enable_lighten"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport validate from '../utilities/validate';\r\nimport { connect } from 'react-redux';\r\n\r\nconst renderInput = ({input, label, type, meta: { touched, error }}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={input.name}>{label}</label>\r\n            <input {...input} className=\"form-control\" type={type} placeholder={label} />\r\n            { touched && error && <span className=\"help-block\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst renderCheck = ({input, label, type, meta: { touched, error }}) => {    \r\n    return (\r\n        <div className={`custom-control custom-${type}`}>\r\n            <input className=\"custom-control-input\" {...input} type={type} placeholder={label} />\r\n            <label className=\"custom-control-label\" htmlFor={input.name}>{label}</label>\r\n            { touched && error && <span className=\"help-block\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass StylerForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showMore: false\r\n        }\r\n    }\r\n    toggleBgMore = () => {\r\n        this.setState(state => ({\r\n            showMore: !state.showMore\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-section\">\r\n                    <h4>Add main colors</h4>\r\n                    <div className=\"mini-section\">\r\n                        <Field\r\n                            name=\"primary\"\r\n                            type=\"color\"\r\n                            component={renderInput}\r\n                            label=\"Primary Color\"\r\n                        />\r\n                        <Field\r\n                            name=\"secondary\"\r\n                            type=\"color\"\r\n                            component={renderInput}\r\n                            label=\"Secondary Color\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-section\">\r\n                    <h4>Create background</h4>\r\n                    <div className=\"mini-section\">\r\n                        <Field\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            component={renderInput}\r\n                            label=\"Background Name\"\r\n                        />\r\n                        <Field\r\n                            name=\"background\"\r\n                            type=\"color\"\r\n                            component={renderInput}\r\n                            label=\"Background Color\"\r\n                        />\r\n                        <div className=\"btn btn-primary show-more-btn\" onClick={() => this.toggleBgMore()}>More options</div>\r\n                        <div className={`show-more mini-section ${this.state.showMore ? '' : 'hidden'}`}>\r\n                            <Field\r\n                                name=\"light_inverse\"\r\n                                type=\"color\"\r\n                                component={renderInput}\r\n                                label=\"Light Inverse\"\r\n                            />\r\n                            <Field\r\n                                name=\"dark_inverse\"\r\n                                type=\"color\"\r\n                                component={renderInput}\r\n                                label=\"Dark Inverse\"\r\n                            />\r\n                            <Field\r\n                                name=\"text\"\r\n                                type=\"color\"\r\n                                component={renderInput}\r\n                                label=\"Background Text\"\r\n                            />\r\n                            <Field\r\n                                name=\"headers\"\r\n                                type=\"color\"\r\n                                component={renderInput}\r\n                                label=\"Headers Color\"\r\n                            />\r\n                            <Field\r\n                                name=\"links\"\r\n                                type=\"color\"\r\n                                component={renderInput}\r\n                                label=\"Links Color\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-section\">\r\n                    <h4>Control variables</h4>\r\n                    <div className=\"mini-section\">\r\n                        <Field\r\n                            name=\"enable_default_root\"\r\n                            type=\"checkbox\"\r\n                            component={renderCheck}\r\n                            label=\"Enable default root\"\r\n                        />\r\n                        <Field\r\n                            name=\"enable_inverse\"\r\n                            type=\"checkbox\"\r\n                            component={renderCheck}\r\n                            label=\"Enable inverse\"\r\n                        />\r\n                        <Field\r\n                            name=\"enable_contrast\"\r\n                            type=\"checkbox\"\r\n                            component={renderCheck}\r\n                            label=\"Enable contrast\"\r\n                        />\r\n                        <Field\r\n                            name=\"enable_trans\"\r\n                            type=\"checkbox\"\r\n                            component={renderCheck}\r\n                            label=\"Enable trans\"\r\n                        />\r\n                        <Field\r\n                            name=\"enable_gray\"\r\n                            type=\"checkbox\"\r\n                            component={renderCheck}\r\n                            label=\"Enable gray\"\r\n                        />\r\n                        <Field\r\n                            name=\"enable_darken\"\r\n                            type=\"checkbox\"\r\n                            component={renderCheck}\r\n                            label=\"Enable darken\"\r\n                        />\r\n                        <Field\r\n                            name=\"enable_lighten\"\r\n                            type=\"checkbox\"\r\n                            component={renderCheck}\r\n                            label=\"Enable lighten\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-section\">\r\n                    <h4>Import components</h4>\r\n                    <div className=\"mini-section\">\r\n                            <Field\r\n                                name=\"components\"\r\n                                value=\"all\"\r\n                                type=\"radio\"\r\n                                component={renderCheck}\r\n                                label=\"All components\"\r\n                            />\r\n                            <Field\r\n                                name=\"components\"\r\n                                defaultChecked={true}\r\n                                value=\"specific\"\r\n                                type=\"radio\"\r\n                                component={renderCheck}\r\n                                label=\"Choose components\"\r\n                            />\r\n                            <div className={`other-components ${(this.props.form && this.props.form.values && this.props.form.values.components !== 'specific') ? 'hidden' : ''}`}>\r\n                                {\r\n                                    this.props.shapesList && this.props.shapesList.map(comp => {\r\n                                        return (\r\n                                            <Field\r\n                                                name={comp.name}\r\n                                                key={comp.name}\r\n                                                type=\"checkbox\"\r\n                                                component={renderCheck}\r\n                                                label={comp.name}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-section\">\r\n                    <h4>Import shapes</h4>\r\n                    <div className=\"mini-section\">\r\n                            <Field\r\n                                name=\"shapes\"\r\n                                value=\"all\"\r\n                                type=\"radio\"\r\n                                component={renderCheck}\r\n                                label=\"All shapes\"\r\n                            />\r\n                            <Field\r\n                                name=\"shapes\"\r\n                                defaultChecked={true}\r\n                                value=\"specific\"\r\n                                type=\"radio\"\r\n                                component={renderCheck}\r\n                                label=\"Choose shapes\"\r\n                            />\r\n                            <div className={`other-components ${(this.props.form && this.props.form.values && this.props.form.values.shapes !== 'specific') ? 'hidden' : ''}`}>\r\n                                {\r\n                                    this.props.shapesList && this.props.shapesList.map(comp => {\r\n                                        return comp.shapes && comp.shapes.map(shape => {\r\n                                            return (\r\n                                                <Field\r\n                                                    name={shape.shape}\r\n                                                    key={shape.shape}\r\n                                                    type=\"checkbox\"\r\n                                                    component={renderCheck}\r\n                                                    label={`${comp.name} - ${shape.shape}`}\r\n                                                />\r\n                                            )\r\n                                        })\r\n                                    })\r\n                                }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-section\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\" disabled={submitting}>\r\n                    Submit\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" disabled={pristine || submitting} onClick={reset}>\r\n                    Clear Values\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {    \r\n    return {\r\n        form: state.form.stylerForm,\r\n        shapesList: state.shapes.shapesList\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'stylerForm',\r\n    validate,\r\n    initialValues: {\r\n        primary: '#a3dbfa',\r\n        secondary: '#bf99ea',\r\n        name: 'dark',\r\n        background: '#343a40',\r\n        enable_default_root: true,\r\n        enable_inverse: true,\r\n        enable_contrast: true,\r\n        enable_trans: true,\r\n        enable_gray: true,\r\n        enable_darken: false,\r\n        enable_lighten: false,\r\n    }\r\n})(connect(mapStateToProps)(StylerForm));"]},"metadata":{},"sourceType":"module"}