{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\src\\\\containers\\\\BuildForm.js\";\nimport React, { Component } from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from '../components/utilities/validate';\n\nvar renderField = function renderField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: input.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, label), React.createElement(\"input\", Object.assign({}, input, {\n    type: type,\n    placeholder: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, error));\n};\n\nvar BuildForm = function BuildForm(props) {\n  var handleSubmit = props.handleSubmit,\n      pristine = props.pristine,\n      reset = props.reset,\n      submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"PrimaryColor\",\n    type: \"text\",\n    component: renderField,\n    label: \"Primary Color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nexport default BuildForm;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\containers\\BuildForm.js"],"names":["React","Component","Field","FieldArray","reduxForm","validate","renderField","input","label","type","meta","touched","error","name","BuildForm","props","handleSubmit","pristine","reset","submitting"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,YAA7C;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoD;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,uBAA9BC,IAA8B;AAAA,MAAtBC,OAAsB,aAAtBA,OAAsB;AAAA,MAAbC,KAAa,aAAbA,KAAa;AACpE,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAEL,KAAK,CAACM,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,KAA7B,CADJ,EAEI,+CAAWD,KAAX;AAAkB,IAAA,IAAI,EAAEE,IAAxB;AAA8B,IAAA,WAAW,EAAED,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGMG,OAAO,IAAIC,KAAX,IAAoB;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CAH1B,CADJ;AAOH,CARD;;AAUA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MACfC,YADe,GAC+BD,KAD/B,CACfC,YADe;AAAA,MACDC,QADC,GAC+BF,KAD/B,CACDE,QADC;AAAA,MACSC,KADT,GAC+BH,KAD/B,CACSG,KADT;AAAA,MACgBC,UADhB,GAC+BJ,KAD/B,CACgBI,UADhB;AAEvB,SACI;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,cADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,SAAS,EAAEV,WAHf;AAII,IAAA,KAAK,EAAC,eAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CAZD;;AAcA,eAAeQ,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Field, FieldArray, reduxForm } from 'redux-form';\r\nimport validate from '../components/utilities/validate';\r\n\r\nconst renderField = ({input, label, type, meta: { touched, error }}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={input.name}>{label}</label>\r\n            <input {...input} type={type} placeholder={label} />\r\n            { touched && error && <span className=\"help-block\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BuildForm = props => {\r\n    const { handleSubmit, pristine, reset, submitting } = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field\r\n                name=\"PrimaryColor\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Primary Color\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default BuildForm;"]},"metadata":{},"sourceType":"module"}