{"ast":null,"code":"import axios from 'axios';\nexport var REQ_SHAPES = 'REQ_SHAPES';\n\nfunction reqShapes() {\n  return {\n    type: REQ_SHAPES\n  };\n}\n\nexport var RES_SHAPES = 'RES_SHAPES';\n\nfunction resShapes(shapesList) {\n  return {\n    type: RES_SHAPES,\n    payload: shapesList\n  };\n}\n\nexport var RES_SHAPES_ERROR = 'RES_SHAPES_ERROR';\n\nfunction resShapesError(err) {\n  return {\n    type: RES_SHAPES_ERROR,\n    error: err\n  };\n}\n\nexport function getShapesList(shapes) {\n  return function (dispatch) {\n    dispatch(reqShapes());\n    axios.get(\"\".concat(process.env.API_URL, \"/api/shapes\"), {\n      // axios.get(`http://localhost:5000/api/shapes`, {\n      params: shapes\n    }).then(function (res) {\n      dispatch(resShapes(res.data));\n    }, function (err) {\n      dispatch(resShapesError(err));\n    });\n  };\n}\nexport var ADD_SHAPE = 'ADD_SHAPE';\nexport function addShapeAction(done) {\n  return {\n    type: ADD_SHAPE,\n    payload: done\n  };\n}\nexport var ADD_SHAPE_ERROR = 'ADD_SHAPE_ERROR';\nexport function addShapeErrorAction(error) {\n  return {\n    type: ADD_SHAPE,\n    payload: error\n  };\n}\nexport function addShape(shape) {\n  return function (dispatch) {\n    axios.post(\"/api/shapes\", shape) // axios.post(`http://localhost:5000/api/shapes`, shape)\n    .then(function (res) {\n      return dispatch(addShapeAction(res.data));\n    }, function (err) {\n      if (err) dispatch(addShapeErrorAction(err.response.data));\n    }).catch(function (err) {\n      return dispatch(addShapeErrorAction(err));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\actions\\shapesAction.js"],"names":["axios","REQ_SHAPES","reqShapes","type","RES_SHAPES","resShapes","shapesList","payload","RES_SHAPES_ERROR","resShapesError","err","error","getShapesList","shapes","dispatch","get","process","env","API_URL","params","then","res","data","ADD_SHAPE","addShapeAction","done","ADD_SHAPE_ERROR","addShapeErrorAction","addShape","shape","post","response","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,YAAnB;;AACP,SAASC,SAAT,GAAqB;AACjB,SAAO;AACHC,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH;;AAED,OAAO,IAAMG,UAAU,GAAG,YAAnB;;AACP,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAC3B,SAAO;AACHH,IAAAA,IAAI,EAAEC,UADH;AAEHG,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH;;AAED,OAAO,IAAME,gBAAgB,GAAG,kBAAzB;;AACP,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,SAAO;AACHP,IAAAA,IAAI,EAAEK,gBADH;AAEHG,IAAAA,KAAK,EAAED;AAFJ,GAAP;AAIH;;AAED,OAAO,SAASE,aAAT,CAAuBC,MAAvB,EAA+B;AAClC,SAAO,UAASC,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAACZ,SAAS,EAAV,CAAR;AACAF,IAAAA,KAAK,CAACe,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,OAAzB,kBAA+C;AAC/C;AACIC,MAAAA,MAAM,EAAEN;AAFmC,KAA/C,EAICO,IAJD,CAIM,UAAAC,GAAG,EAAI;AACTP,MAAAA,QAAQ,CAACT,SAAS,CAACgB,GAAG,CAACC,IAAL,CAAV,CAAR;AACH,KAND,EAOA,UAAAZ,GAAG,EAAI;AACHI,MAAAA,QAAQ,CAACL,cAAc,CAACC,GAAD,CAAf,CAAR;AACH,KATD;AAUH,GAZD;AAaH;AAED,OAAO,IAAMa,SAAS,GAAG,WAAlB;AACP,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO;AACHtB,IAAAA,IAAI,EAAEoB,SADH;AAEHhB,IAAAA,OAAO,EAAEkB;AAFN,GAAP;AAIH;AAED,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,SAASC,mBAAT,CAA6BhB,KAA7B,EAAoC;AACvC,SAAO;AACHR,IAAAA,IAAI,EAAEoB,SADH;AAEHhB,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH;AAED,OAAO,SAASiB,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B,SAAO,UAACf,QAAD,EAAc;AACjBd,IAAAA,KAAK,CAAC8B,IAAN,gBAA0BD,KAA1B,EACA;AADA,KAECT,IAFD,CAEM,UAAAC,GAAG;AAAA,aAAIP,QAAQ,CAACU,cAAc,CAACH,GAAG,CAACC,IAAL,CAAf,CAAZ;AAAA,KAFT,EAGI,UAAAZ,GAAG,EAAI;AACH,UAAGA,GAAH,EAAQI,QAAQ,CAACa,mBAAmB,CAACjB,GAAG,CAACqB,QAAJ,CAAaT,IAAd,CAApB,CAAR;AACX,KALL,EAOCU,KAPD,CAOO,UAAAtB,GAAG;AAAA,aAAII,QAAQ,CAACa,mBAAmB,CAACjB,GAAD,CAApB,CAAZ;AAAA,KAPV;AAQH,GATD;AAUH","sourcesContent":["import axios from 'axios';\r\n\r\nexport const REQ_SHAPES = 'REQ_SHAPES';\r\nfunction reqShapes() {\r\n    return {\r\n        type: REQ_SHAPES\r\n    }\r\n}\r\n\r\nexport const RES_SHAPES = 'RES_SHAPES';\r\nfunction resShapes(shapesList) {\r\n    return {\r\n        type: RES_SHAPES,\r\n        payload: shapesList\r\n    }\r\n}\r\n\r\nexport const RES_SHAPES_ERROR = 'RES_SHAPES_ERROR';\r\nfunction resShapesError(err) {\r\n    return {\r\n        type: RES_SHAPES_ERROR,\r\n        error: err\r\n    }\r\n}\r\n \r\nexport function getShapesList(shapes) {\r\n    return function(dispatch) {\r\n        dispatch(reqShapes());\r\n        axios.get(`${process.env.API_URL}/api/shapes`, {\r\n        // axios.get(`http://localhost:5000/api/shapes`, {\r\n            params: shapes\r\n        })\r\n        .then(res => {\r\n            dispatch(resShapes(res.data));\r\n        },\r\n        err => {\r\n            dispatch(resShapesError(err));\r\n        });\r\n    }\r\n}\r\n\r\nexport const ADD_SHAPE = 'ADD_SHAPE';\r\nexport function addShapeAction(done) {\r\n    return {\r\n        type: ADD_SHAPE,\r\n        payload: done\r\n    }\r\n}\r\n\r\nexport const ADD_SHAPE_ERROR = 'ADD_SHAPE_ERROR';\r\nexport function addShapeErrorAction(error) {\r\n    return {\r\n        type: ADD_SHAPE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport function addShape(shape) {\r\n    return (dispatch) => {\r\n        axios.post(`/api/shapes`, shape)\r\n        // axios.post(`http://localhost:5000/api/shapes`, shape)\r\n        .then(res => dispatch(addShapeAction(res.data)), \r\n            err => {\r\n                if(err) dispatch(addShapeErrorAction(err.response.data));\r\n            }\r\n        )\r\n        .catch(err => dispatch(addShapeErrorAction(err)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}