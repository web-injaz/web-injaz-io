{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\src\\\\containers\\\\TemplatePreview.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Components from '../components/Components';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\nimport { compileToCss, getShapesList as _getShapesList } from '../actions';\n\nvar TemplatePreview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TemplatePreview, _Component);\n\n  function TemplatePreview(props) {\n    var _this;\n\n    _classCallCheck(this, TemplatePreview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemplatePreview).call(this, props));\n    _this.state = {\n      variables: ''\n    };\n    return _this;\n  }\n\n  _createClass(TemplatePreview, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (this.props.shapesList !== nextProps.shapesList) {\n        return true;\n      }\n\n      if (this.props.result !== nextProps.result) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        variables: qs.parse(this.props.location ? this.props.location.search.substr(1) : '')\n      }, function () {\n        _this2.props.sendVariables(_this2.state.variables);\n      });\n      this.props.getShapesList([]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var variables = this.state.variables;\n      var shapesList = this.props.shapesList;\n      var result = this.props.result;\n      console.log(shapesList); // Array of shapes\n\n      var varsArray = Object.keys(variables);\n      var shapesArray = [];\n\n      if (variables.shapes !== 'all') {\n        varsArray.forEach(function (element) {\n          if (variables[element] === true && !element.startsWith('enable')) {\n            shapesArray.push(element);\n          }\n        });\n      } // Style\n\n\n      var Template = styled.div(_templateObject(), result ? result.bg : '');\n      return React.createElement(Template, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"template_preview bg-\".concat(variables.name).concat(variables ? '' : ' hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, shapesList.length > 0 && shapesList.map(function (component) {\n        return component.shapes.length > 0 && component.shapes.map(function (shape) {\n          if (variables.shapes === 'all') {\n            return React.createElement(Components, {\n              key: shape.shape,\n              component: component.name,\n              shape: shape.shape,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            });\n          } else {\n            return shapesArray.map(function (item) {\n              if (item === shape.shape) {\n                return React.createElement(Components, {\n                  key: item,\n                  component: component.name,\n                  shape: shape.shape,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 75\n                  },\n                  __self: this\n                });\n              } else {\n                return null;\n              }\n            });\n          }\n        });\n      })));\n    }\n  }]);\n\n  return TemplatePreview;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    result: state.compile.result,\n    variables: state.compile.variables,\n    shapesList: state.shapes.shapesList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    sendVariables: function sendVariables(vars) {\n      return dispatch(compileToCss(vars));\n    },\n    getShapesList: function getShapesList(shapes) {\n      return dispatch(_getShapesList(shapes));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplatePreview);","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\containers\\TemplatePreview.js"],"names":["React","Component","Components","styled","connect","qs","compileToCss","getShapesList","TemplatePreview","props","state","variables","nextProps","shapesList","result","setState","parse","location","search","substr","sendVariables","console","log","varsArray","Object","keys","shapesArray","shapes","forEach","element","startsWith","push","Template","div","bg","name","length","map","component","shape","item","mapStateToProps","compile","mapDispatchToProps","dispatch","vars"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Components from '../components/Components';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport qs from 'qs';\r\nimport { compileToCss, getShapesList } from '../actions';\r\n\r\nclass TemplatePreview extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n      this.state = {\r\n         variables: ''\r\n      }\r\n    }\r\n    \r\n    shouldComponentUpdate(nextProps) {\r\n        if (this.props.shapesList !== nextProps.shapesList) {\r\n            return true;\r\n        }\r\n        if (this.props.result !== nextProps.result) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {        \r\n        this.setState({\r\n            variables: qs.parse(this.props.location ? this.props.location.search.substr(1) : '')\r\n        }, () => {            \r\n            this.props.sendVariables(this.state.variables);\r\n        });\r\n        this.props.getShapesList([]);\r\n    }\r\n\r\n    render() {\r\n        let variables = this.state.variables;\r\n        let shapesList = this.props.shapesList;\r\n        let result = this.props.result;\r\n        console.log(shapesList);\r\n        \r\n        // Array of shapes\r\n        let varsArray = Object.keys(variables);\r\n        let shapesArray = [];\r\n        if(variables.shapes !== 'all') {\r\n            varsArray.forEach(element => {\r\n                if(variables[element] === true && !element.startsWith('enable')) {\r\n                    shapesArray.push(element);\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Style\r\n        const Template = styled.div`${result ? result.bg : ''}`;\r\n\r\n        return (\r\n            <Template>\r\n                <div className={`template_preview bg-${variables.name}${variables ? '' : ' hidden'}`}>\r\n                    {\r\n                        shapesList.length > 0 && shapesList.map(component => {\r\n                            return component.shapes.length > 0 && component.shapes.map(shape => {\r\n                                if(variables.shapes === 'all') {\r\n                                    return (\r\n                                        <Components\r\n                                            key={shape.shape}\r\n                                            component={component.name}\r\n                                            shape={shape.shape}\r\n                                        />\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return shapesArray.map(item => {\r\n                                        if (item === shape.shape) {\r\n                                            return (\r\n                                                <Components\r\n                                                    key={item}\r\n                                                    component={component.name}\r\n                                                    shape={shape.shape}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return null;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                </div>\r\n            </Template>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        result: state.compile.result,\r\n        variables: state.compile.variables,\r\n        shapesList: state.shapes.shapesList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendVariables: vars => dispatch(compileToCss(vars)),\r\n        getShapesList: shapes => dispatch(getShapesList(shapes))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplatePreview);"]},"metadata":{},"sourceType":"module"}