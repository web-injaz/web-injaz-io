{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _ConnectedField = _interopRequireDefault(require(\"./ConnectedField\"));\n\nvar _shallowCompare = _interopRequireDefault(require(\"./util/shallowCompare\"));\n\nvar _prefixName = _interopRequireDefault(require(\"./util/prefixName\"));\n\nvar _plain = _interopRequireDefault(require(\"./structure/plain\"));\n\nvar _ReduxFormContext = require(\"./ReduxFormContext\");\n\nvar _validateComponentProp = _interopRequireDefault(require(\"./util/validateComponentProp\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar createField = function createField(structure) {\n  var ConnectedField = (0, _ConnectedField.default)(structure);\n  var setIn = structure.setIn;\n\n  var Field =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Field, _Component);\n\n    function Field(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.ref = _react.default.createRef();\n      _this.ref = _react.default.createRef();\n\n      _this.normalize = function (name, value) {\n        var normalize = _this.props.normalize;\n\n        if (!normalize) {\n          return value;\n        }\n\n        var previousValues = _this.props._reduxForm.getValues();\n\n        var previousValue = _this.value;\n        var nextValues = setIn(previousValues, name, value);\n        return normalize(value, previousValue, nextValues, previousValues, name);\n      };\n\n      if (!props._reduxForm) {\n        throw new Error('Field must be inside a component decorated with reduxForm()');\n      }\n\n      return _this;\n    }\n\n    var _proto = Field.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this2 = this;\n\n      this.props._reduxForm.register(this.name, 'Field', function () {\n        return _this2.props.validate;\n      }, function () {\n        return _this2.props.warn;\n      });\n    };\n\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      return (0, _shallowCompare.default)(this, nextProps, nextState);\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var oldName = (0, _prefixName.default)(this.props, this.props.name);\n      var newName = (0, _prefixName.default)(nextProps, nextProps.name);\n\n      if (oldName !== newName || // use deepEqual here because they could be a function or an array of functions\n      !_plain.default.deepEqual(this.props.validate, nextProps.validate) || !_plain.default.deepEqual(this.props.warn, nextProps.warn)) {\n        // unregister old name\n        this.props._reduxForm.unregister(oldName); // register new name\n\n\n        this.props._reduxForm.register(newName, 'Field', function () {\n          return nextProps.validate;\n        }, function () {\n          return nextProps.warn;\n        });\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.props._reduxForm.unregister(this.name);\n    };\n\n    _proto.getRenderedComponent = function getRenderedComponent() {\n      (0, _invariant.default)(this.props.forwardRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a forwardRef prop to Field');\n      return this.ref.current ? this.ref.current.getRenderedComponent() : undefined;\n    };\n\n    _proto.render = function render() {\n      return (0, _react.createElement)(ConnectedField, _extends({}, this.props, {\n        name: this.name,\n        normalize: this.normalize,\n        ref: this.ref\n      }));\n    };\n\n    _createClass(Field, [{\n      key: \"name\",\n      get: function get() {\n        return (0, _prefixName.default)(this.props, this.props.name);\n      }\n    }, {\n      key: \"dirty\",\n      get: function get() {\n        return !this.pristine;\n      }\n    }, {\n      key: \"pristine\",\n      get: function get() {\n        return !!(this.ref.current && this.ref.current.isPristine());\n      }\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this.ref.current && this.ref.current.getValue();\n      }\n    }]);\n\n    return Field;\n  }(_react.Component);\n\n  Field.propTypes = {\n    name: _propTypes.default.string.isRequired,\n    component: _validateComponentProp.default,\n    format: _propTypes.default.func,\n    normalize: _propTypes.default.func,\n    onBlur: _propTypes.default.func,\n    onChange: _propTypes.default.func,\n    onFocus: _propTypes.default.func,\n    onDragStart: _propTypes.default.func,\n    onDrop: _propTypes.default.func,\n    parse: _propTypes.default.func,\n    props: _propTypes.default.object,\n    validate: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.func)]),\n    warn: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.func)]),\n    forwardRef: _propTypes.default.bool,\n    immutableProps: _propTypes.default.arrayOf(_propTypes.default.string),\n    _reduxForm: _propTypes.default.object\n  };\n  (0, _reactLifecyclesCompat.polyfill)(Field);\n  return (0, _ReduxFormContext.withReduxForm)(Field);\n};\n\nvar _default = createField;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}