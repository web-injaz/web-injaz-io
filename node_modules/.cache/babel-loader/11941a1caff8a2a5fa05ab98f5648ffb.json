{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\src\\\\containers\\\\ShaperForm.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from '../utilities/validate';\nimport { connect } from 'react-redux';\n\nvar renderInput = function renderInput(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: input.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, label), React.createElement(\"input\", Object.assign({}, input, {\n    className: \"form-control\",\n    type: type,\n    placeholder: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, error));\n};\n\nvar renderCheck = function renderCheck(_ref2) {\n  var input = _ref2.input,\n      label = _ref2.label,\n      type = _ref2.type,\n      _ref2$meta = _ref2.meta,\n      touched = _ref2$meta.touched,\n      error = _ref2$meta.error;\n  return React.createElement(\"div\", {\n    className: \"custom-control custom-\".concat(type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    className: \"custom-control-input\"\n  }, input, {\n    type: type,\n    placeholder: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: input.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, label), touched && error && React.createElement(\"span\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, error));\n};\n\nvar ShaperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShaperForm, _Component);\n\n  function ShaperForm() {\n    _classCallCheck(this, ShaperForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShaperForm).apply(this, arguments));\n  }\n\n  _createClass(ShaperForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n      return React.createElement(\"div\", {\n        className: \"shaper-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Build a shape\"), React.createElement(\"div\", {\n        className: \"mini-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"shape_name\",\n        type: \"text\",\n        component: renderInput,\n        label: \"Shape name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"component_name\",\n        type: \"text\",\n        component: renderInput,\n        label: \"Component name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ShaperForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    form: state.form.shaperForm\n  };\n};\n\nexport default reduxForm({\n  form: 'shaperForm',\n  validate: validate\n})(connect(mapStateToProps)(ShaperForm));","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\containers\\ShaperForm.js"],"names":["React","Component","Field","reduxForm","validate","connect","renderInput","input","label","type","meta","touched","error","name","renderCheck","ShaperForm","props","handleSubmit","pristine","reset","submitting","mapStateToProps","state","form","shaperForm"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoD;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,uBAA9BC,IAA8B;AAAA,MAAtBC,OAAsB,aAAtBA,OAAsB;AAAA,MAAbC,KAAa,aAAbA,KAAa;AACpE,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAEL,KAAK,CAACM,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,KAA7B,CADJ,EAEI,+CAAWD,KAAX;AAAkB,IAAA,SAAS,EAAC,cAA5B;AAA2C,IAAA,IAAI,EAAEE,IAAjD;AAAuD,IAAA,WAAW,EAAED,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGMG,OAAO,IAAIC,KAAX,IAAoB;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CAH1B,CADJ;AAOH,CARD;;AAUA,IAAME,WAAW,GAAG,SAAdA,WAAc,QAAoD;AAAA,MAAlDP,KAAkD,SAAlDA,KAAkD;AAAA,MAA3CC,KAA2C,SAA3CA,KAA2C;AAAA,MAApCC,IAAoC,SAApCA,IAAoC;AAAA,yBAA9BC,IAA8B;AAAA,MAAtBC,OAAsB,cAAtBA,OAAsB;AAAA,MAAbC,KAAa,cAAbA,KAAa;AACpE,SACI;AAAK,IAAA,SAAS,kCAA2BH,IAA3B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA4CF,KAA5C;AAAmD,IAAA,IAAI,EAAEE,IAAzD;AAA+D,IAAA,WAAW,EAAED,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAwC,IAAA,OAAO,EAAED,KAAK,CAACM,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8DL,KAA9D,CAFJ,EAGMG,OAAO,IAAIC,KAAX,IAAoB;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CAH1B,CADJ;AAOH,CARD;;IAUMG,U;;;;;;;;;;;;;6BAEO;AAAA,wBACiD,KAAKC,KADtD;AAAA,UACGC,YADH,eACGA,YADH;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,UAC2BC,KAD3B,eAC2BA,KAD3B;AAAA,UACkCC,UADlC,eACkCA,UADlC;AAGL,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,YADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,SAAS,EAAEd,WAHf;AAII,QAAA,KAAK,EAAC,YAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,gBADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,SAAS,EAAEA,WAHf;AAII,QAAA,KAAK,EAAC,gBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAFJ,CADJ,CADJ;AAqBH;;;;EA1BoBL,S;;AA6BzB,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC;AADd,GAAP;AAGH,CAJD;;AAMA,eAAerB,SAAS,CAAC;AACrBoB,EAAAA,IAAI,EAAE,YADe;AAErBnB,EAAAA,QAAQ,EAARA;AAFqB,CAAD,CAAT,CAGZC,OAAO,CAACgB,eAAD,CAAP,CAAyBN,UAAzB,CAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport validate from '../utilities/validate';\r\nimport { connect } from 'react-redux';\r\n\r\nconst renderInput = ({input, label, type, meta: { touched, error }}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={input.name}>{label}</label>\r\n            <input {...input} className=\"form-control\" type={type} placeholder={label} />\r\n            { touched && error && <span className=\"help-block\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst renderCheck = ({input, label, type, meta: { touched, error }}) => {    \r\n    return (\r\n        <div className={`custom-control custom-${type}`}>\r\n            <input className=\"custom-control-input\" {...input} type={type} placeholder={label} />\r\n            <label className=\"custom-control-label\" htmlFor={input.name}>{label}</label>\r\n            { touched && error && <span className=\"help-block\">{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass ShaperForm extends Component\r\n{\r\n    render() {\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n\r\n        return (\r\n            <div className=\"shaper-form\">\r\n                <div className=\"form-section\">\r\n                <h4>Build a shape</h4>\r\n                    <div className=\"mini-section\">\r\n                        <Field\r\n                            name=\"shape_name\"\r\n                            type=\"text\"\r\n                            component={renderInput}\r\n                            label=\"Shape name\"\r\n                        />\r\n                        <Field\r\n                            name=\"component_name\"\r\n                            type=\"text\"\r\n                            component={renderInput}\r\n                            label=\"Component name\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {    \r\n    return {\r\n        form: state.form.shaperForm\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'shaperForm',\r\n    validate\r\n})(connect(mapStateToProps)(ShaperForm));"]},"metadata":{},"sourceType":"module"}