{"ast":null,"code":"import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\src\\\\containers\\\\MiniShaper.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getShapesList as _getShapesList } from '../actions';\nimport Components from '../components/Components';\n\nvar MiniShaper =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MiniShaper, _Component);\n\n  function MiniShaper(props) {\n    var _this;\n\n    _classCallCheck(this, MiniShaper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MiniShaper).call(this, props));\n\n    _this.shapesStructureList = function (shapeName) {\n      return {\n        navbar: React.createElement(Components, {\n          component: \"navbar\",\n          shape: shapeName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }),\n        carousel: React.createElement(Components, {\n          component: \"carousel\",\n          shape: shapeName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        })\n      };\n    };\n\n    _this.toggleTab = function (tab) {\n      if (_this.state.activeItem !== tab) {\n        _this.setState({\n          activeItem: tab,\n          activeShape: 'default'\n        });\n      }\n    };\n\n    _this.toggleTabShape = function (tab) {\n      if (_this.state.activeShape !== tab) {\n        _this.setState(function (state) {\n          return _objectSpread({}, state, {\n            activeShape: tab\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      activeItem: 'navbar',\n      activeShape: 'default',\n      shapes: ['navbar', 'carousel']\n    };\n    return _this;\n  }\n\n  _createClass(MiniShaper, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getShapesList(this.state.shapes);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"shaper-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Pick a Shape\"), React.createElement(\"div\", {\n        className: \"classic-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"nav nav-tabs nav-fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.shapesList && this.props.shapesList.map(function (comp, index) {\n        return React.createElement(\"div\", {\n          className: \"nav-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"nav-link \".concat(_this2.state.activeItem === comp.name && 'active'),\n          onClick: function onClick() {\n            _this2.toggleTab(comp.name);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, comp.name));\n      })), React.createElement(\"div\", {\n        className: \"tab-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.shapesList && this.props.shapesList.map(function (comp, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          id: comp.name,\n          className: \"tab-pane fade \".concat(_this2.state.activeItem === comp.name && 'show active'),\n          role: \"tabpanel\",\n          \"aria-labelledby\": \"\".concat(comp.name, \"-tab\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"nav nav-tabs nav-fill\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, comp.shapes && comp.shapes.map(function (shape, index) {\n          return React.createElement(\"div\", {\n            className: \"nav-item\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"nav-link \".concat(_this2.state.activeShape === shape.name && 'active'),\n            onClick: function onClick() {\n              _this2.toggleTabShape(shape.name);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, shape.name));\n        })), React.createElement(\"div\", {\n          className: \"tab-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, comp.shapes && comp.shapes.map(function (shape, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            id: shape.name,\n            className: \"tab-pane fade \".concat(_this2.state.activeShape === shape.name && 'show active'),\n            role: \"tabpanel\",\n            \"aria-labelledby\": \"\".concat(shape.name, \"-tab\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(Components, {\n            component: comp.name,\n            shape: _this2.state.activeShape,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }));\n        })));\n      }))), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"And alot more\")));\n    }\n  }]);\n\n  return MiniShaper;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    shapesList: state.shapes.shapesList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getShapesList: function getShapesList(shapes) {\n      return dispatch(_getShapesList(shapes));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniShaper);","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\containers\\MiniShaper.js"],"names":["React","Component","connect","getShapesList","Components","MiniShaper","props","shapesStructureList","shapeName","navbar","carousel","toggleTab","tab","state","activeItem","setState","activeShape","toggleTabShape","shapes","shapesList","map","comp","index","name","shape","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getShapesList } from '../actions';\r\n\r\nimport Components from '../components/Components';\r\n\r\nclass MiniShaper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: 'navbar',\r\n            activeShape: 'default',\r\n            shapes: [\r\n                'navbar',\r\n                'carousel'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getShapesList(this.state.shapes);\r\n    }\r\n\r\n    shapesStructureList = (shapeName) => {\r\n        return {\r\n            navbar: <Components component=\"navbar\" shape={shapeName} />,\r\n            carousel: <Components component=\"carousel\" shape={shapeName} />\r\n        }\r\n    }\r\n\r\n    toggleTab = (tab) => {\r\n        if(this.state.activeItem !== tab) {\r\n            this.setState({\r\n                activeItem: tab,\r\n                activeShape: 'default'\r\n            })\r\n        }\r\n    }\r\n    \r\n    toggleTabShape = (tab) => {\r\n        if(this.state.activeShape !== tab) {\r\n            this.setState(state => ({\r\n                ...state,\r\n                activeShape: tab\r\n            }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"shaper-section\">\r\n                <div className=\"container\">\r\n                    <h3>Pick a Shape</h3>\r\n                    <div className=\"classic-tabs\">\r\n                        <div className=\"nav nav-tabs nav-fill\">\r\n                            {\r\n                                this.props.shapesList && this.props.shapesList.map((comp, index) => {\r\n                                    return (\r\n                                        <div className=\"nav-item\" key={index}>\r\n                                            <span \r\n                                                className={`nav-link ${(this.state.activeItem === comp.name) && 'active'}`}\r\n                                                onClick={() => {this.toggleTab(comp.name)}}\r\n                                            >\r\n                                                {comp.name}\r\n                                            </span>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"tab-content\">\r\n                            {\r\n                                this.props.shapesList && this.props.shapesList.map((comp, index) => {\r\n                                    return (\r\n                                        <div \r\n                                            key={index} \r\n                                            id={comp.name} \r\n                                            className={`tab-pane fade ${this.state.activeItem === comp.name && 'show active'}`}\r\n                                            role=\"tabpanel\" \r\n                                            aria-labelledby={`${comp.name}-tab`}\r\n                                        >\r\n                                            <div className=\"nav nav-tabs nav-fill\">\r\n                                                {\r\n                                                    comp.shapes && comp.shapes.map((shape, index) => {\r\n                                                        return (\r\n                                                            <div className=\"nav-item\" key={index}>\r\n                                                                <span \r\n                                                                    className={`nav-link ${(this.state.activeShape === shape.name) && 'active'}`}\r\n                                                                    onClick={() => {this.toggleTabShape(shape.name)}}\r\n                                                                >\r\n                                                                    {shape.name}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"tab-content\">\r\n                                                {\r\n                                                    comp.shapes && comp.shapes.map((shape, index) => {\r\n                                                        return (\r\n                                                            <div \r\n                                                                key={index} \r\n                                                                id={shape.name} \r\n                                                                className={`tab-pane fade ${this.state.activeShape === shape.name && 'show active'}`}\r\n                                                                role=\"tabpanel\" \r\n                                                                aria-labelledby={`${shape.name}-tab`}\r\n                                                            >\r\n                                                                <Components component={comp.name} shape={this.state.activeShape} />\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <h6>And alot more</h6>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        shapesList: state.shapes.shapesList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getShapesList: (shapes) => dispatch(getShapesList(shapes))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniShaper);"]},"metadata":{},"sourceType":"module"}