{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\webinjaz-io\\\\src\\\\containers\\\\Shaper.js\";\nimport React, { Component } from 'react';\nimport Header from '../layout/Header';\nimport Footer from '../layout/Footer';\nimport ShaperForm from './ShaperForm';\nimport { addShape as _addShape } from '../actions/shapesAction';\nimport { connect } from 'react-redux';\n\nvar Shaper =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shaper, _Component);\n\n  function Shaper(props) {\n    var _this;\n\n    _classCallCheck(this, Shaper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Shaper).call(this, props));\n\n    _this.submitHandler = function (values) {\n      _this.props.addShape(values);\n\n      var codepen = values.codepen ? React.createElement(\"iframe\", {\n        height: \"350\",\n        scrolling: \"no\",\n        title: \"Empty\",\n        src: \"\".concat(values.codepen, \"/?height=265&theme-id=0&default-tab=css,result\"),\n        frameBorder: \"no\",\n        allowFullScreen: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Perview not available\") : null;\n      console.log(codepen);\n\n      _this.setState({\n        compPreview: values.component_name,\n        shapePreview: values.shape_name,\n        codepen: codepen\n      });\n    };\n\n    _this.state = {\n      compPreview: '',\n      shapePreview: '',\n      codepen: null\n    };\n    return _this;\n  }\n\n  _createClass(Shaper, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.res);\n      return React.createElement(\"div\", {\n        className: \"shaper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Header, {\n        image: \"webinjaz-shaper.png\",\n        current: \"Shaper\",\n        version: \"v0.0.1(beta)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(ShaperForm, {\n        onSubmit: this.submitHandler,\n        res: this.props.shapes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.codepen), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Shaper;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    shapes: state.shapes\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addShape: function addShape(data) {\n      return dispatch(_addShape(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shaper);","map":{"version":3,"sources":["C:\\xampp\\htdocs\\webinjaz-io\\src\\containers\\Shaper.js"],"names":["React","Component","Header","Footer","ShaperForm","addShape","connect","Shaper","props","submitHandler","values","codepen","width","console","log","setState","compPreview","component_name","shapePreview","shape_name","state","res","shapes","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAQ,IAARA,SAAT,QAAyB,yBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UASnBC,aATmB,GASH,UAAAC,MAAM,EAAI;AACtB,YAAKF,KAAL,CAAWH,QAAX,CAAoBK,MAApB;;AAEA,UAAMC,OAAO,GAAGD,MAAM,CAACC,OAAP,GACR;AAAQ,QAAA,MAAM,EAAC,KAAf;AAAqB,QAAA,SAAS,EAAC,IAA/B;AAAoC,QAAA,KAAK,EAAC,OAA1C;AAAkD,QAAA,GAAG,YAAKD,MAAM,CAACC,OAAZ,mDAArD;AAA0H,QAAA,WAAW,EAAC,IAAtI;AAA2I,QAAA,eAAe,MAA1J;AAA2J,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADQ,GAIZ,IAJJ;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAEA,YAAKI,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEN,MAAM,CAACO,cADV;AAEVC,QAAAA,YAAY,EAAER,MAAM,CAACS,UAFX;AAGVR,QAAAA,OAAO,EAAPA;AAHU,OAAd;AAKH,KAxBkB;;AAEf,UAAKS,KAAL,GAAa;AACTJ,MAAAA,WAAW,EAAE,EADJ;AAETE,MAAAA,YAAY,EAAE,EAFL;AAGTP,MAAAA,OAAO,EAAE;AAHA,KAAb;AAFe;AAOlB;;;;6BAmBQ;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWa,GAAvB;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,qBAAd;AAAoC,QAAA,OAAO,EAAC,QAA5C;AAAqD,QAAA,OAAO,EAAC,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKZ,aAA3B;AAA0C,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWc,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAIQ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWT,OADhB,CAJR,EAOI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ;AAWH;;;;EA1CgBV,S;;AA6CrB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,KAAK;AAAA,SAAK;AAC9BE,IAAAA,MAAM,EAAEF,KAAK,CAACE;AADgB,GAAL;AAAA,CAA7B;;AAIA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCpB,IAAAA,QAAQ,EAAE,kBAAAqB,IAAI;AAAA,aAAID,QAAQ,CAACpB,SAAQ,CAACqB,IAAD,CAAT,CAAZ;AAAA;AADsB,GAAL;AAAA,CAAnC;;AAIA,eAAepB,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../layout/Header';\r\nimport Footer from '../layout/Footer';\r\nimport ShaperForm from './ShaperForm';\r\nimport { addShape } from '../actions/shapesAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Shaper extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            compPreview: '',\r\n            shapePreview: '',\r\n            codepen: null\r\n        }\r\n    }\r\n\r\n    submitHandler = values => {\r\n        this.props.addShape(values);\r\n\r\n        const codepen = values.codepen ? (\r\n                <iframe height='350' scrolling='no' title='Empty' src={`${values.codepen}/?height=265&theme-id=0&default-tab=css,result`} frameBorder='no' allowFullScreen style={{width: '100%'}}>\r\n                Perview not available\r\n                </iframe>\r\n        ) : null;\r\n        console.log(codepen);\r\n        \r\n        this.setState({\r\n            compPreview: values.component_name,\r\n            shapePreview: values.shape_name,\r\n            codepen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.res);\r\n        \r\n        return (\r\n            <div className=\"shaper\">\r\n                <Header image=\"webinjaz-shaper.png\" current=\"Shaper\" version=\"v0.0.1(beta)\" />\r\n                <ShaperForm onSubmit={this.submitHandler} res={this.props.shapes} />\r\n                    {/* <Components component={this.state.compPreview} shape={this.state.shapePreview} /> */}\r\n                    <div className=\"container\">\r\n                        {this.state.codepen}\r\n                    </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    shapes: state.shapes\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addShape: data => dispatch(addShape(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shaper);"]},"metadata":{},"sourceType":"module"}